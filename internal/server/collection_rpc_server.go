// Code generated by goctl. DO NOT EDIT.
// Source: collection.proto

package server

import (
	"context"

	"github.com/xh-polaris/meowchat-collection-rpc/internal/logic"
	"github.com/xh-polaris/meowchat-collection-rpc/internal/svc"
	"github.com/xh-polaris/meowchat-collection-rpc/pb"
)

type CollectionRpcServer struct {
	svcCtx *svc.ServiceContext
	pb.UnimplementedCollectionRpcServer
}

func NewCollectionRpcServer(svcCtx *svc.ServiceContext) *CollectionRpcServer {
	return &CollectionRpcServer{
		svcCtx: svcCtx,
	}
}

func (s *CollectionRpcServer) ListCat(ctx context.Context, in *pb.ListCatReq) (*pb.ListCatResp, error) {
	l := logic.NewListCatLogic(ctx, s.svcCtx)
	return l.ListCat(in)
}

func (s *CollectionRpcServer) RetrieveCat(ctx context.Context, in *pb.RetrieveCatReq) (*pb.RetrieveCatResp, error) {
	l := logic.NewRetrieveCatLogic(ctx, s.svcCtx)
	return l.RetrieveCat(in)
}

func (s *CollectionRpcServer) CreateCat(ctx context.Context, in *pb.CreateCatReq) (*pb.CreateCatResp, error) {
	l := logic.NewCreateCatLogic(ctx, s.svcCtx)
	return l.CreateCat(in)
}

func (s *CollectionRpcServer) UpdateCat(ctx context.Context, in *pb.UpdateCatReq) (*pb.UpdateCatResp, error) {
	l := logic.NewUpdateCatLogic(ctx, s.svcCtx)
	return l.UpdateCat(in)
}

func (s *CollectionRpcServer) DeleteCat(ctx context.Context, in *pb.DeleteCatReq) (*pb.DeleteCatResp, error) {
	l := logic.NewDeleteCatLogic(ctx, s.svcCtx)
	return l.DeleteCat(in)
}
